#include <stdio.h>
int main()
{
    int b, a[100], size, i, j, num, pos, Search, found, temp;
    printf("0.Exit\n1.View all elements.\n2.Insert a new element.\n3.Search an element.\n4.Delete an element.\n5.Sort elements in ascending order.\n6.Sort elements in Descending order.\n7.Find memory location of an array element.");
    printf("\nEnter Your choice: ");
    scanf("%d", &b);
    printf("\n\nEnter size of the array : ");
    scanf("%d", &size);
    printf("Enter elements: \n");
    for( i = 0; i < size; i++ )
    {
        printf("array[%d] = ", i+1);
        scanf("%d", &a[i]);
    }
    if( b <= 7 && b >= 0 )
    {
        switch(b)
        {
        case 1:
            printf("\nAll elements are given below: \n");
            for( i = 0; i < size; i++ )
            {
                printf("%d  ", a[i]);
            }
            printf(" ");
            break;
        case 2:
            printf("\nInsert new element which do you want: ");
            printf("\nEnter element to insert: ");
            scanf("%d", &num);
            printf("\nEnter the element position: ");
            scanf("%d", &pos);
 
            if(pos > size+1 || pos <= 0)
            {
                printf("Invalid position! Please enter the position between 1 to %d", size);
            }
            else
            {
                for(i=size; i>=pos; i--)
                {
                    a[i] = a[i-1];
                }
                a[pos-1] = num;
                size++;
                printf("Array elements after insertion: ");
                for(i=0; i<size; i++)
                {
                    printf("%d\t", a[i]);
                }
                break;
            }
 
        case 3:
            printf("\nEnter for Searching element which do you want: ");
            printf("\nEnter element for search: ");
            scanf("%d", &Search);
            found = 0;
            for(i=0; i<size; i++)
            {
                if(a[i] == Search)
                {
                    found = 1;
                    break;
                }
            }
            if(found == 1)
            {
                printf("\n%d is found at position %d", Search, i + 1);
            }
            else
            {
                printf("\nSorry!%d is not found in the array", Search);
            }
            break;
        case 4:
            printf("\nEnter the element which position you want to delete : ");
            scanf("%d", &pos);
            if(pos < 0 || pos > size)
            {
                printf("Invalid position! Please enter position between 1 to %d", size);
            }
            else
            {
                for(i=pos-1; i<size-1; i++)
                {
                    a[i] = a[i + 1];
                }
                size--;
            }
            printf("\nElements of array after delete are: ");
            for(i=0; i<size; i++)
            {
                printf("%d  ", a[i]);
            }
            break;
        case 5:
            printf("\nBefore ascendng ordder elements are: ");
            for( i = 0; i < size; i++ )
            {
                printf("%d  ", a[i]);
            }
 
            for(i=0; i<size; i++)
            {
                for(j=i+1; j<size; j++)
                {
                    if(a[i] > a[j])
                    {
                        temp     = a[i];
                        a[i] = a[j];
                        a[j] = temp;
                    }
                }
            }
            printf("\nElements of array in ascending order: ");
            for(i=0; i<size; i++)
            {
                printf("%d  ", a[i]);
            }
            break;
        case 6:
            printf("\nBefore Descending order elements are: \n");
            for( i = 0; i < size; i++ )
            {
                printf("%d  ", a[i]);
            }
            for (i = 0; i < size; ++i)
            {
                for (j = i + 1; j < size; ++j)
                {
                    if (a[i] < a[j])
                    {
                        temp = a[i];
                        a[i] = a[j];
                        a[j] = temp;
                    }
                }
            }
 
            printf("\nThe numbers arranged in descending order are given below:\n");
 
            for (i = 0; i < size; ++i)
            {
                printf("%d  ", a[i]);
            }
            break;
        case 7:
            printf("\nEnter element position for finding memory address: \n");
            scanf("%d", &i+1);
            printf("%p  ", &a[i]);
            break;
        case 0:
            printf("\nExit.\a\n");
            break;
        default:
            printf("Aagain try.\n");
        }
    }
    else
        printf("\nError! Please Enter a valid number.\n\a\a");
    return 0;
}
